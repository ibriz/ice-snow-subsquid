enum ContractStandard {
    ERC20
    ERC721
    ERC1155
}

enum TransferType {
    TRANSFER
    MINT
    BURN
}

enum TransferDirection {
    From
    To
}

type NfToken @entity {
    id: ID!
    owner: Account
    name: String
    symbol: String
    uri: String
    transfers: [NftTransfer!] @derivedFrom(field: "token")
    approvals: [NftApproval!] @derivedFrom(field: "token")
    amount: BigInt!
    contract: Contract
}

type FToken @entity {
    id: ID!
    name: String @index
    symbol: String @index
    decimals: Int
    transfers: [FtTransfer!] @derivedFrom(field: "token")
    approvals: [FtApproval!] @derivedFrom(field: "token")
}

type Account @entity {
    id: ID!
    ownedTokens: [NfToken!] @derivedFrom(field: "owner")
    nftTransfers: [AccountNftTransfer!] @derivedFrom(field: "account")
    ftTransfers: [AccountFtTransfer!] @derivedFrom(field: "account")
    nftApprovals: [AccountNftApproval!] @derivedFrom(field: "account")
    ftApprovals: [AccountFtApproval!] @derivedFrom(field: "account")
    balancesFToken: [AccountFTokenBalance]! @derivedFrom(field: "account")
}

type Contract @entity {
    id: ID!
    contractStandard: ContractStandard! @index
    mintedTokens: [NfToken!] @derivedFrom(field: "contract")
    createdAtBlock: BigInt!
    createdAt: BigInt!
}

type NftTransfer @entity {
    id: ID!
    token: NfToken!
    from: Account
    to: Account
    amount: BigInt
    timestamp: BigInt!
    block: Int!
    transactionHash: String!
    transferType: TransferType
}

type FtTransfer @entity {
    id: ID!
    token: FToken!
    from: Account
    to: Account
    amount: BigInt
    timestamp: BigInt!
    block: Int!
    transactionHash: String!
    transferType: TransferType
}

# entity for linking account and transfer
type AccountNftTransfer @entity {
    id: ID!
    transfer: NftTransfer
    account: Account!
    direction: TransferDirection
}

type AccountFtTransfer @entity {
    id: ID!
    transfer: FtTransfer
    account: Account!
    direction: TransferDirection
}

type AccountFTokenBalance @entity {
    id: ID! # <account_id>-<token_id>
    account: Account!
    token: FToken!
    amount: BigInt!
    updatedAtBlock: Int!
    updatedAt: BigInt!
}

type NftApproval @entity {
    id: ID!
    token: NfToken!
    from: Account
    to: Account
    timestamp: BigInt!
    block: Int!
    transactionHash: String!
}

type FtApproval @entity {
    id: ID!
    token: FToken!
    from: Account
    to: Account
    amount: BigInt
    timestamp: BigInt!
    block: Int!
    transactionHash: String!
}

# entity for linking account and approval
type AccountNftApproval @entity {
    id: ID!
    approval: NftApproval
    account: Account!
    direction: TransferDirection
}

type AccountFtApproval @entity {
    id: ID!
    approval: FtApproval
    account: Account!
    direction: TransferDirection
}
